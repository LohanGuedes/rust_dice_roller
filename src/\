//use _rand::Rng;
use std::{io, num::ParseIntError, vec};

fn main() {
    println!("Rust Dice-Roller!");
    println!("by Lcravo_g");

    //Get user input.
    println!("Enter The dices you want to roll.");
    let mut u_input = String::new();
    io::stdin()
        .read_line(&mut u_input)
        .expect("Failed to read the line.");

    println!("===================================");
    print("{}", parse(u_input));
}

fn parse(input: &str) -> Result<Vec<Vec<usize>>, ParseIntError> {
    input
        .split_whitespace()
        .map(|dice| dice.split('d').map(|x| x.parse()).collect())
        .collect()
}

#[test]
fn parse_2d10() {
    assert_eq!(Ok(vec![vec![2, 10]]), parse("2d10"));
}

// fn roll(input: &str) {
//     let split_inp = input
//         .split_whitespace()
//         .map(|dice| dice.split('d').map(|x| x.parse()).collect())
//         .collect::<Result<Vec<usize>, ParseIntError>>();

//     for dice in split_inp {
//         println!("{}", dice[0]);
//         println!("{}", dice[1]);
//     }
//     //TODO: Split based on spaces -> the letter "d"
//     //TODO: Iterate trough the list and get the numbers of
//     //          rolls and the dice number.
//     //TODO: Print the results -> 2d10: 10, 5
//     //TODO: Ask the user if they like too keep playing.
// }
